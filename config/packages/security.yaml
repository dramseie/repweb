security:
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  password_hashers:
    App\Entity\User:
      algorithm: auto

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    main:
      lazy: true
      provider: app_user_provider

      # Keep your custom authenticator
      custom_authenticator: App\Security\EgCustomAuthenticator

      # Use form_login ONLY as the entry point (so anonymous users get redirected to /login)
      form_login:
        login_path: app_login       # route name that renders your login page
        check_path: app_login       # same route if your authenticator posts to it
        enable_csrf: true
        default_target_path: /      # after successful login

      entry_point: form_login       # <- ensures redirect to /login instead of 401

      logout:
        path: app_logout            # route name handled by Symfony
        target: app_login           # where to go after logout (login route)

      remember_me:
        secret: '%kernel.secret%'
        lifetime: 1209600           # 14 days
        path: /

  access_control:
    # Public routes (order matters; most specific first)
    - { path: ^/login, roles: PUBLIC_ACCESS }
    - { path: ^/logout, roles: PUBLIC_ACCESS }

    # Public assets used on login page
    - { path: ^/build, roles: PUBLIC_ACCESS }     # Webpack Encore output
    - { path: ^/images, roles: PUBLIC_ACCESS }    # logos, favicon
    - { path: ^/api/menu, roles: PUBLIC_ACCESS }  # navbar menu on login page

    # ðŸ‘‰ Mail module (open during development)
    - { path: ^/api/mail, roles: PUBLIC_ACCESS }  # switch to ROLE_USER/ROLE_ADMIN later
    # ðŸ‘‰ Public/Private token resolver (public links must work without login)
    - { path: ^/s/, roles: PUBLIC_ACCESS }

    # Admin area requires admin
    - { path: ^/admin, roles: ROLE_ADMIN }

    # Protected APIs (session required)
    - { path: ^/api/report/, roles: ROLE_USER }
    - { path: ^/api/dt/,     roles: ROLE_USER }

    # Catchâ€‘all: everything else requires login
    - { path: ^/, roles: ROLE_USER }

    - { path: ^/api/sql/preview$, roles: PUBLIC_ACCESS }

    - { path: ^/api/sqlc, roles: PUBLIC_ACCESS }
