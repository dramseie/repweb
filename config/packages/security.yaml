security:
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  password_hashers:
    App\Entity\User:
      algorithm: auto

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    main:
      lazy: true
      provider: app_user_provider

      # Keep your custom authenticator
      custom_authenticator: App\Security\EgCustomAuthenticator

      # Use form_login as entry point (redirects anonymous users to /login)
      form_login:
        login_path: app_login
        check_path: app_login
        enable_csrf: true
        default_target_path: /
      entry_point: form_login

      logout:
        path: app_logout
        target: app_login

      remember_me:
        secret: '%kernel.secret%'
        lifetime: 1209600   # 14 days
        path: /

  access_control:
    # --- MOST SPECIFIC PUBLIC ROUTES FIRST ---
    - { path: ^/api/eav/geo/view$, roles: PUBLIC_ACCESS }   # World Map GeoJSON (public)
    - { path: ^/login$, roles: PUBLIC_ACCESS }
    - { path: ^/logout$, roles: PUBLIC_ACCESS }

    # Public assets (login page, etc.)
    - { path: ^/build, roles: PUBLIC_ACCESS }     # Webpack Encore output
    - { path: ^/images, roles: PUBLIC_ACCESS }    # logos, favicon

    # Other explicitly public APIs
    - { path: ^/api/menu$, roles: PUBLIC_ACCESS }
    - { path: ^/api/mail, roles: PUBLIC_ACCESS }  # TODO: tighten later (ROLE_USER/ROLE_ADMIN)
    - { path: ^/s/, roles: PUBLIC_ACCESS }        # token-based public links
    - { path: ^/api/sql/preview$, roles: PUBLIC_ACCESS }
    - { path: ^/api/sqlc, roles: PUBLIC_ACCESS }

    # Admin area
    - { path: ^/admin, roles: ROLE_ADMIN }

    # Protected APIs (session required)
    - { path: ^/api/report/, roles: ROLE_USER }
    - { path: ^/api/dt/,     roles: ROLE_USER }

    # --- CATCH-ALL LAST ---
    - { path: ^/, roles: ROLE_USER }
